generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db?mode=memory"
}

enum AccountRoles {
  CLIENT
  ADMIN
}

enum CompanyType {
  DIGITAL_MARKETING_AGENCY
  SERVICE_COMPANY
  BUSINESS
  STARTUP
}

enum CompanyCustomers {
  C1_10
  C11_20
  C21_50
  C51_100
  C100P
}

enum CompanyEmployees {
  JUST_ME
  C1_10
  C11_20
  C21_50
  C51_100
  C100P
}

enum PaymentStatus {
  PENDING
  PAID
}

enum PaymentPlan {
  STANDARD
  PLUS
  PREMIUM
}

model Company {
  companyid        String           @id @default(uuid())
  companyname      String
  companycnpj      String           @unique
  companytype      CompanyType
  companycustomers CompanyCustomers
  companyemployees CompanyEmployees
  Accounts         Accounts[]
}

model Accounts {
  acountid         String       @id @default(uuid())
  createAt         DateTime     @default(now())
  username         String       @unique
  email            String       @unique
  password         String
  role             AccountRoles
  company          Company      @relation(fields: [companyCompanyid], references: [companyid])
  companyCompanyid String
  funnels          Funnel[]

  @@index([email])
}

model IntentAccount {
  intentid      String        @id @default(uuid())
  createAt      DateTime      @default(now())
  email         String        @unique
  paymentid     String        @unique
  plan          PaymentPlan
  paymentstatus PaymentStatus @default(PENDING)

  @@index([email])
}

model Funnel {
  funnelid  String    @id @default(uuid())
  title     String
  account   Accounts  @relation(fields: [accountId], references: [acountid])
  accountId String
  pipelines Pipeline[]

  @@index([accountId])
}

model Pipeline {
  pipeid    String   @id @default(uuid())
  title     String
  isDefaut  Boolean  @default(false)
  headColor String
  funnel    Funnel   @relation(fields: [funnelId], references: [funnelid], onDelete: Cascade)
  funnelId  String
  items     ItemPipe[]

  @@index([funnelId])
}

model ItemPipe {
  itemid         String   @id @default(uuid())
  contactId      String
  collaboratorId String
  amount         Float
  tags           String   @default("[]")
  pipeline       Pipeline @relation(fields: [pipelineId], references: [pipeid], onDelete: Cascade)
  pipelineId     String

  @@index([pipelineId])
}
